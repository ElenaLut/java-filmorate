DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS RATE CASCADE;
DROP TABLE IF EXISTS FILMS CASCADE;
DROP TABLE IF EXISTS GENRE CASCADE;
DROP TABLE IF EXISTS FILM_GENRE;
DROP TABLE IF EXISTS FRIENDS CASCADE;
DROP TABLE IF EXISTS FILM_LIKES CASCADE;


CREATE TABLE IF NOT EXISTS users
(
    user_id long GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(255) NOT NULL UNIQUE,
    login varchar(255) NOT NULL,
    user_name varchar,
    birthday DATETIME
);

CREATE TABLE IF NOT EXISTS rate
(
    rate_id INTEGER NOT NULL ,
    rate_type varchar,
    CONSTRAINT MPA_PK PRIMARY KEY (rate_id)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      long PRIMARY KEY,
    film_name    varchar(255),
    description  varchar(200),
    duration     INTEGER,
    release_date DATETIME,
    rate_id       INTEGER,
    CONSTRAINT mpa_fk FOREIGN KEY (rate_id) REFERENCES rate
);


CREATE TABLE IF NOT EXISTS genre
(
    genre_id long GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar,
        CONSTRAINT genre_pk PRIMARY KEY (genre_id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  long,
    genre_id long,
    PRIMARY KEY (film_id, genre_id)
);
ALTER TABLE film_genre ADD FOREIGN KEY (film_id) REFERENCES films(film_id);

CREATE TABLE IF NOT EXISTS friends
(
    user_id          long,
    friend_id        long,
    friend_status_id INTEGER,
    PRIMARY KEY (user_id, friend_id)
);
   
  CREATE TABLE IF NOT EXISTS film_likes
  (
      film_id long PRIMARY KEY REFERENCES films(film_id),
      user_id long,
      CONSTRAINT fk_user_likes FOREIGN KEY (user_id) REFERENCES users(user_id)
  );